{"ast":null,"code":"import{useState}from\"react\";import styles from\"./ReviewScreen.module.css\";import appStyles from\"../../App.module.css\";import{quizData}from\"../../utils/quizData\";import{InfoToolTip}from\"../../components/toolTip/InfoToolTip\";import{Question}from\"../../components/question/Question\";import cx from\"classnames\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const ReviewScreen=_ref=>{let{setIsRetake}=_ref;const{questions}=quizData;const[userAnswers,setUserAnswers]=useState(()=>{return questions.map(()=>null);});const handleAnswerSelection=(questionIndex,selectedAnswer)=>{const updatedAnswers=[...userAnswers];updatedAnswers[questionIndex]=selectedAnswer;setUserAnswers(updatedAnswers);};return/*#__PURE__*/_jsx(\"div\",{className:cx(appStyles.fadeInRight,styles.reviewScreenWrapper),children:/*#__PURE__*/_jsxs(\"div\",{className:styles.reviewScreen,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.columnContainer,children:questions.map((data,index)=>/*#__PURE__*/_jsx(\"div\",{className:styles.column,children:/*#__PURE__*/_jsx(Question,{index:index,data:data,selectedAnswer:userAnswers[index],correctAnswer:data.correctAnswer,onAnswerSelected:handleAnswerSelection})},index))}),/*#__PURE__*/_jsx(\"div\",{className:styles.btnDiv,children:/*#__PURE__*/_jsx(InfoToolTip,{text:\"Click me to retake the quiz!\",component:/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setIsRetake(true);},className:styles.retakeBtn,children:\"Retake Quiz\"})})})]})});};","map":{"version":3,"names":["useState","styles","appStyles","quizData","InfoToolTip","Question","cx","jsx","_jsx","jsxs","_jsxs","ReviewScreen","_ref","setIsRetake","questions","userAnswers","setUserAnswers","map","handleAnswerSelection","questionIndex","selectedAnswer","updatedAnswers","className","fadeInRight","reviewScreenWrapper","children","reviewScreen","columnContainer","data","index","column","correctAnswer","onAnswerSelected","btnDiv","text","component","onClick","retakeBtn"],"sources":["C:/Users/ASUS/Documents/tub quiz app/ReactQuizApp/src/screens/reviewScreen/ReviewScreen.jsx"],"sourcesContent":["import{useState}from\"react\";\r\nimport styles from\"./ReviewScreen.module.css\";\r\nimport appStyles from\"../../App.module.css\";\r\nimport {quizData}from\"../../utils/quizData\";\r\nimport {InfoToolTip}from\"../../components/toolTip/InfoToolTip\";\r\nimport {Question}from\"../../components/question/Question\";\r\nimport cx from\"classnames\";\r\n\r\nexport const ReviewScreen=({setIsRetake})=>{\r\n  const {questions}=quizData;\r\n\r\n  const [userAnswers,setUserAnswers]=useState(()=>{\r\n\r\n    return questions.map(()=>null);\r\n  });\r\n\r\n  const handleAnswerSelection=(questionIndex,selectedAnswer)=>{\r\n    const updatedAnswers=[...userAnswers];\r\n    updatedAnswers[questionIndex]=selectedAnswer;\r\n    setUserAnswers(updatedAnswers);\r\n  };\r\n\r\n  return(\r\n    <div className={cx(appStyles.fadeInRight,styles.reviewScreenWrapper)}>\r\n      <div className={styles.reviewScreen}>\r\n     \r\n        <div className={styles.columnContainer}>\r\n          {questions.map((data,index)=>(\r\n            <div className={styles.column} key={index}>\r\n              <Question\r\n                index={index}\r\n                data={data}\r\n                selectedAnswer={userAnswers[index]} \r\n                correctAnswer={data.correctAnswer} \r\n                onAnswerSelected={handleAnswerSelection} \r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className={styles.btnDiv}>\r\n          <InfoToolTip\r\n            text=\"Click me to retake the quiz!\"\r\n            component={\r\n              <button\r\n                onClick={()=>{\r\n                  setIsRetake(true);\r\n                }}\r\n                className={styles.retakeBtn}\r\n              >\r\n                Retake Quiz\r\n              </button>\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"AAAA,OAAOA,QAAQ,KAAK,OAAO,CAC3B,MAAO,CAAAC,MAAM,KAAK,2BAA2B,CAC7C,MAAO,CAAAC,SAAS,KAAK,sBAAsB,CAC3C,OAAQC,QAAQ,KAAK,sBAAsB,CAC3C,OAAQC,WAAW,KAAK,sCAAsC,CAC9D,OAAQC,QAAQ,KAAK,oCAAoC,CACzD,MAAO,CAAAC,EAAE,KAAK,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3B,MAAO,MAAM,CAAAC,YAAY,CAACC,IAAA,EAAiB,IAAhB,CAACC,WAAW,CAAC,CAAAD,IAAA,CACtC,KAAM,CAACE,SAAS,CAAC,CAACX,QAAQ,CAE1B,KAAM,CAACY,WAAW,CAACC,cAAc,CAAC,CAAChB,QAAQ,CAAC,IAAI,CAE9C,MAAO,CAAAc,SAAS,CAACG,GAAG,CAAC,IAAI,IAAI,CAAC,CAChC,CAAC,CAAC,CAEF,KAAM,CAAAC,qBAAqB,CAACA,CAACC,aAAa,CAACC,cAAc,GAAG,CAC1D,KAAM,CAAAC,cAAc,CAAC,CAAC,GAAGN,WAAW,CAAC,CACrCM,cAAc,CAACF,aAAa,CAAC,CAACC,cAAc,CAC5CJ,cAAc,CAACK,cAAc,CAAC,CAChC,CAAC,CAED,mBACEb,IAAA,QAAKc,SAAS,CAAEhB,EAAE,CAACJ,SAAS,CAACqB,WAAW,CAACtB,MAAM,CAACuB,mBAAmB,CAAE,CAAAC,QAAA,cACnEf,KAAA,QAAKY,SAAS,CAAErB,MAAM,CAACyB,YAAa,CAAAD,QAAA,eAElCjB,IAAA,QAAKc,SAAS,CAAErB,MAAM,CAAC0B,eAAgB,CAAAF,QAAA,CACpCX,SAAS,CAACG,GAAG,CAAC,CAACW,IAAI,CAACC,KAAK,gBACxBrB,IAAA,QAAKc,SAAS,CAAErB,MAAM,CAAC6B,MAAO,CAAAL,QAAA,cAC5BjB,IAAA,CAACH,QAAQ,EACPwB,KAAK,CAAEA,KAAM,CACbD,IAAI,CAAEA,IAAK,CACXR,cAAc,CAAEL,WAAW,CAACc,KAAK,CAAE,CACnCE,aAAa,CAAEH,IAAI,CAACG,aAAc,CAClCC,gBAAgB,CAAEd,qBAAsB,CACzC,CAAC,EAPgCW,KAQ/B,CACN,CAAC,CACC,CAAC,cAENrB,IAAA,QAAKc,SAAS,CAAErB,MAAM,CAACgC,MAAO,CAAAR,QAAA,cAC5BjB,IAAA,CAACJ,WAAW,EACV8B,IAAI,CAAC,8BAA8B,CACnCC,SAAS,cACP3B,IAAA,WACE4B,OAAO,CAAEA,CAAA,GAAI,CACXvB,WAAW,CAAC,IAAI,CAAC,CACnB,CAAE,CACFS,SAAS,CAAErB,MAAM,CAACoC,SAAU,CAAAZ,QAAA,CAC7B,aAED,CAAQ,CACT,CACF,CAAC,CACC,CAAC,EACH,CAAC,CACH,CAAC,CAEV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}