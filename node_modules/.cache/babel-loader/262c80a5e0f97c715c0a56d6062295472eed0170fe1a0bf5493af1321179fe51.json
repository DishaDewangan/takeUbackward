{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\tub quiz app\\\\ReactQuizApp\\\\src\\\\screens\\\\reviewScreen\\\\ReviewScreen.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport styles from \"./ReviewScreen.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport { quizData } from \"../../utils/quizData\";\nimport { InfoToolTip } from \"../../components/toolTip/InfoToolTip\";\nimport { Question } from \"../../components/question/Question\";\nimport cx from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ReviewScreen = _ref => {\n  _s();\n  let {\n    setIsRetake\n  } = _ref;\n  const {\n    questions\n  } = quizData;\n  const [userAnswers, setUserAnswers] = useState(() => {\n    return questions.map(() => null);\n  });\n\n  // Function to handle answer selection\n  const handleAnswerSelection = (questionIndex, selectedAnswer) => {\n    const updatedAnswers = [...userAnswers];\n    updatedAnswers[questionIndex] = selectedAnswer;\n    setUserAnswers(updatedAnswers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx(appStyles.fadeInRight, styles.reviewScreenWrapper),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.reviewScreen,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.columnContainer,\n        children: questions.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.column,\n          children: /*#__PURE__*/_jsxDEV(Question, {\n            index: index,\n            data: data,\n            selectedAnswer: userAnswers[index] // Pass the selected answer to compare\n            ,\n            correctAnswer: data.correctAnswer // Pass the correct answer\n            ,\n            onAnswerSelected: handleAnswerSelection // Handle the answer selection\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.btnDiv,\n        children: /*#__PURE__*/_jsxDEV(InfoToolTip, {\n          text: \"Click me to retake the quiz!\",\n          component: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setIsRetake(true);\n            },\n            className: styles.retakeBtn,\n            children: \"Retake Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewScreen, \"FiFnPzncEOsxLJ+uSqfUoDrO2QA=\");\n_c = ReviewScreen;\nvar _c;\n$RefreshReg$(_c, \"ReviewScreen\");","map":{"version":3,"names":["useState","styles","appStyles","quizData","InfoToolTip","Question","cx","jsxDEV","_jsxDEV","ReviewScreen","_ref","_s","setIsRetake","questions","userAnswers","setUserAnswers","map","handleAnswerSelection","questionIndex","selectedAnswer","updatedAnswers","className","fadeInRight","reviewScreenWrapper","children","reviewScreen","columnContainer","data","index","column","correctAnswer","onAnswerSelected","fileName","_jsxFileName","lineNumber","columnNumber","btnDiv","text","component","onClick","retakeBtn","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/tub quiz app/ReactQuizApp/src/screens/reviewScreen/ReviewScreen.jsx"],"sourcesContent":["import{useState}from\"react\";\r\nimport styles from\"./ReviewScreen.module.css\";\r\nimport appStyles from\"../../App.module.css\";\r\nimport {quizData}from\"../../utils/quizData\";\r\nimport {InfoToolTip}from\"../../components/toolTip/InfoToolTip\";\r\nimport {Question}from\"../../components/question/Question\";\r\nimport cx from\"classnames\";\r\n\r\nexport const ReviewScreen=({setIsRetake})=>{\r\n  const {questions}=quizData;\r\n\r\n  const [userAnswers,setUserAnswers]=useState(()=>{\r\n    \r\n    return questions.map(()=>null);\r\n  });\r\n\r\n  // Function to handle answer selection\r\n  const handleAnswerSelection=(questionIndex,selectedAnswer)=>{\r\n    const updatedAnswers=[...userAnswers];\r\n    updatedAnswers[questionIndex]=selectedAnswer;\r\n    setUserAnswers(updatedAnswers);\r\n  };\r\n\r\n  return(\r\n    <div className={cx(appStyles.fadeInRight,styles.reviewScreenWrapper)}>\r\n      <div className={styles.reviewScreen}>\r\n        {/* Dynamically map through all questions */}\r\n        <div className={styles.columnContainer}>\r\n          {questions.map((data,index)=>(\r\n            <div className={styles.column} key={index}>\r\n              <Question\r\n                index={index}\r\n                data={data}\r\n                selectedAnswer={userAnswers[index]} // Pass the selected answer to compare\r\n                correctAnswer={data.correctAnswer} // Pass the correct answer\r\n                onAnswerSelected={handleAnswerSelection} // Handle the answer selection\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className={styles.btnDiv}>\r\n          <InfoToolTip\r\n            text=\"Click me to retake the quiz!\"\r\n            component={\r\n              <button\r\n                onClick={()=>{\r\n                  setIsRetake(true);\r\n                }}\r\n                className={styles.retakeBtn}\r\n              >\r\n                Retake Quiz\r\n              </button>\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}