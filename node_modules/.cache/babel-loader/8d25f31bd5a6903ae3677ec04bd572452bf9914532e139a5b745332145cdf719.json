{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\tub quiz app\\\\ReactQuizApp\\\\src\\\\screens\\\\reviewScreen\\\\ReviewScreen.jsx\";\nimport styles from \"./ReviewScreen.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport { quizData } from \"../../utils/quizData\";\nimport { InfoToolTip } from \"../../components/toolTip/InfoToolTip\";\nimport { Question } from \"../../components/question/Question\";\nimport cx from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ReviewScreen = _ref => {\n  let {\n    setIsRetake\n  } = _ref;\n  const {\n    questions = []\n  } = quizData; // Default to empty array if questions is undefined\n\n  // Check if questions array is empty\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No questions available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx(appStyles.fadeInRight, styles.reviewScreenWrapper),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.reviewScreen,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.columnContainer,\n        children: questions.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.column,\n          children: /*#__PURE__*/_jsxDEV(Question, {\n            index: index,\n            data: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.btnDiv,\n        children: /*#__PURE__*/_jsxDEV(InfoToolTip, {\n          text: \"Click me to retake the quiz!\",\n          component: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setIsRetake(true);\n            },\n            className: styles.retakeBtn,\n            children: \"Retake Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = ReviewScreen;\nvar _c;\n$RefreshReg$(_c, \"ReviewScreen\");","map":{"version":3,"names":["styles","appStyles","quizData","InfoToolTip","Question","cx","jsxDEV","_jsxDEV","ReviewScreen","_ref","setIsRetake","questions","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","fadeInRight","reviewScreenWrapper","reviewScreen","columnContainer","map","data","index","column","btnDiv","text","component","onClick","retakeBtn","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/tub quiz app/ReactQuizApp/src/screens/reviewScreen/ReviewScreen.jsx"],"sourcesContent":["import styles from \"./ReviewScreen.module.css\";\r\nimport appStyles from \"../../App.module.css\";\r\nimport { quizData } from \"../../utils/quizData\";\r\nimport { InfoToolTip } from \"../../components/toolTip/InfoToolTip\";\r\nimport { Question } from \"../../components/question/Question\";\r\nimport cx from \"classnames\";\r\n\r\nexport const ReviewScreen = ({ setIsRetake }) => {\r\n  const { questions = [] } = quizData; // Default to empty array if questions is undefined\r\n\r\n  // Check if questions array is empty\r\n  if (questions.length === 0) {\r\n    return <div>No questions available.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={cx(appStyles.fadeInRight, styles.reviewScreenWrapper)}>\r\n      <div className={styles.reviewScreen}>\r\n        {/* Dynamically map through all questions */}\r\n        <div className={styles.columnContainer}>\r\n          {questions.map((data, index) => (\r\n            <div className={styles.column} key={index}>\r\n              <Question index={index} data={data} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className={styles.btnDiv}>\r\n          <InfoToolTip\r\n            text=\"Click me to retake the quiz!\"\r\n            component={\r\n              <button\r\n                onClick={() => {\r\n                  setIsRetake(true);\r\n                }}\r\n                className={styles.retakeBtn}\r\n              >\r\n                Retake Quiz\r\n              </button>\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,WAAW,QAAQ,sCAAsC;AAClE,SAASC,QAAQ,QAAQ,oCAAoC;AAC7D,OAAOC,EAAE,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAAqB;EAAA,IAApB;IAAEC;EAAY,CAAC,GAAAD,IAAA;EAC1C,MAAM;IAAEE,SAAS,GAAG;EAAG,CAAC,GAAGT,QAAQ,CAAC,CAAC;;EAErC;EACA,IAAIS,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;IAC1B,oBAAOL,OAAA;MAAAM,QAAA,EAAK;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC3C;EAEA,oBACEV,OAAA;IAAKW,SAAS,EAAEb,EAAE,CAACJ,SAAS,CAACkB,WAAW,EAAEnB,MAAM,CAACoB,mBAAmB,CAAE;IAAAP,QAAA,eACpEN,OAAA;MAAKW,SAAS,EAAElB,MAAM,CAACqB,YAAa;MAAAR,QAAA,gBAElCN,OAAA;QAAKW,SAAS,EAAElB,MAAM,CAACsB,eAAgB;QAAAT,QAAA,EACpCF,SAAS,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzBlB,OAAA;UAAKW,SAAS,EAAElB,MAAM,CAAC0B,MAAO;UAAAb,QAAA,eAC5BN,OAAA,CAACH,QAAQ;YAACqB,KAAK,EAAEA,KAAM;YAACD,IAAI,EAAEA;UAAK;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,GADJQ,KAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEpC,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENV,OAAA;QAAKW,SAAS,EAAElB,MAAM,CAAC2B,MAAO;QAAAd,QAAA,eAC5BN,OAAA,CAACJ,WAAW;UACVyB,IAAI,EAAC,8BAA8B;UACnCC,SAAS,eACPtB,OAAA;YACEuB,OAAO,EAAEA,CAAA,KAAM;cACbpB,WAAW,CAAC,IAAI,CAAC;YACnB,CAAE;YACFQ,SAAS,EAAElB,MAAM,CAAC+B,SAAU;YAAAlB,QAAA,EAC7B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QACT;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACe,EAAA,GAtCWxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}