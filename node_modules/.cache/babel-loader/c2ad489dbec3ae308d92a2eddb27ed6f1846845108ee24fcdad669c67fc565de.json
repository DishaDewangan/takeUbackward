{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\tub quiz app\\\\ReactQuizApp\\\\src\\\\screens\\\\reviewScreen\\\\ReviewScreen.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport styles from \"./ReviewScreen.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport { quizData } from \"../../utils/quizData\";\nimport { InfoToolTip } from \"../../components/toolTip/InfoToolTip\";\nimport { Question } from \"../../components/question/Question\";\nimport cx from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ReviewScreen = _ref => {\n  _s();\n  let {\n    setIsRetake\n  } = _ref;\n  const {\n    questions\n  } = quizData;\n\n  // Initialize the user's answers (this can be stored in state or props)\n  const [userAnswers, setUserAnswers] = useState(() => {\n    // Default to an empty array\n    return questions.map(() => null);\n  });\n  const handleAnswerSelection = (questionIndex, selectedAnswer) => {\n    // Update the user's selected answer for the specific question\n    const updatedAnswers = [...userAnswers];\n    updatedAnswers[questionIndex] = selectedAnswer;\n    setUserAnswers(updatedAnswers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx(appStyles.fadeInRight, styles.reviewScreenWrapper),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.reviewScreen,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.columnContainer,\n        children: questions.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.column,\n          children: /*#__PURE__*/_jsxDEV(Question, {\n            index: index,\n            data: data,\n            selectedAnswer: userAnswers[index],\n            onAnswerSelected: handleAnswerSelection\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.btnDiv,\n        children: /*#__PURE__*/_jsxDEV(InfoToolTip, {\n          text: \"Click me to retake the quiz!\",\n          component: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setIsRetake(true);\n            },\n            className: styles.retakeBtn,\n            children: \"Retake Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewScreen, \"304buQNkZS4sbZS2unbBb0Pvp0c=\");\n_c = ReviewScreen;\nvar _c;\n$RefreshReg$(_c, \"ReviewScreen\");","map":{"version":3,"names":["useState","styles","appStyles","quizData","InfoToolTip","Question","cx","jsxDEV","_jsxDEV","ReviewScreen","_ref","_s","setIsRetake","questions","userAnswers","setUserAnswers","map","handleAnswerSelection","questionIndex","selectedAnswer","updatedAnswers","className","fadeInRight","reviewScreenWrapper","children","reviewScreen","columnContainer","data","index","column","onAnswerSelected","fileName","_jsxFileName","lineNumber","columnNumber","btnDiv","text","component","onClick","retakeBtn","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/tub quiz app/ReactQuizApp/src/screens/reviewScreen/ReviewScreen.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport styles from \"./ReviewScreen.module.css\";\r\nimport appStyles from \"../../App.module.css\";\r\nimport { quizData } from \"../../utils/quizData\";\r\nimport { InfoToolTip } from \"../../components/toolTip/InfoToolTip\";\r\nimport { Question } from \"../../components/question/Question\";\r\nimport cx from \"classnames\";\r\n\r\nexport const ReviewScreen = ({ setIsRetake }) => {\r\n  const { questions } = quizData;\r\n\r\n  // Initialize the user's answers (this can be stored in state or props)\r\n  const [userAnswers, setUserAnswers] = useState(() => {\r\n    // Default to an empty array\r\n    return questions.map(() => null);\r\n  });\r\n\r\n  const handleAnswerSelection = (questionIndex, selectedAnswer) => {\r\n    // Update the user's selected answer for the specific question\r\n    const updatedAnswers = [...userAnswers];\r\n    updatedAnswers[questionIndex] = selectedAnswer;\r\n    setUserAnswers(updatedAnswers);\r\n  };\r\n\r\n  return (\r\n    <div className={cx(appStyles.fadeInRight, styles.reviewScreenWrapper)}>\r\n      <div className={styles.reviewScreen}>\r\n        {/* Dynamically map through all questions */}\r\n        <div className={styles.columnContainer}>\r\n          {questions.map((data, index) => (\r\n            <div className={styles.column} key={index}>\r\n              {/* Pass the user's selected answer and compare with correctAnswer */}\r\n              <Question\r\n                index={index}\r\n                data={data}\r\n                selectedAnswer={userAnswers[index]}\r\n                onAnswerSelected={handleAnswerSelection}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className={styles.btnDiv}>\r\n          <InfoToolTip\r\n            text=\"Click me to retake the quiz!\"\r\n            component={\r\n              <button\r\n                onClick={() => {\r\n                  setIsRetake(true);\r\n                }}\r\n                className={styles.retakeBtn}\r\n              >\r\n                Retake Quiz\r\n              </button>\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,WAAW,QAAQ,sCAAsC;AAClE,SAASC,QAAQ,QAAQ,oCAAoC;AAC7D,OAAOC,EAAE,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAAqB;EAAAC,EAAA;EAAA,IAApB;IAAEC;EAAY,CAAC,GAAAF,IAAA;EAC1C,MAAM;IAAEG;EAAU,CAAC,GAAGV,QAAQ;;EAE9B;EACA,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,MAAM;IACnD;IACA,OAAOa,SAAS,CAACG,GAAG,CAAC,MAAM,IAAI,CAAC;EAClC,CAAC,CAAC;EAEF,MAAMC,qBAAqB,GAAGA,CAACC,aAAa,EAAEC,cAAc,KAAK;IAC/D;IACA,MAAMC,cAAc,GAAG,CAAC,GAAGN,WAAW,CAAC;IACvCM,cAAc,CAACF,aAAa,CAAC,GAAGC,cAAc;IAC9CJ,cAAc,CAACK,cAAc,CAAC;EAChC,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAEf,EAAE,CAACJ,SAAS,CAACoB,WAAW,EAAErB,MAAM,CAACsB,mBAAmB,CAAE;IAAAC,QAAA,eACpEhB,OAAA;MAAKa,SAAS,EAAEpB,MAAM,CAACwB,YAAa;MAAAD,QAAA,gBAElChB,OAAA;QAAKa,SAAS,EAAEpB,MAAM,CAACyB,eAAgB;QAAAF,QAAA,EACpCX,SAAS,CAACG,GAAG,CAAC,CAACW,IAAI,EAAEC,KAAK,kBACzBpB,OAAA;UAAKa,SAAS,EAAEpB,MAAM,CAAC4B,MAAO;UAAAL,QAAA,eAE5BhB,OAAA,CAACH,QAAQ;YACPuB,KAAK,EAAEA,KAAM;YACbD,IAAI,EAAEA,IAAK;YACXR,cAAc,EAAEL,WAAW,CAACc,KAAK,CAAE;YACnCE,gBAAgB,EAAEb;UAAsB;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC;QAAC,GAPgCN,KAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQpC,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEN1B,OAAA;QAAKa,SAAS,EAAEpB,MAAM,CAACkC,MAAO;QAAAX,QAAA,eAC5BhB,OAAA,CAACJ,WAAW;UACVgC,IAAI,EAAC,8BAA8B;UACnCC,SAAS,eACP7B,OAAA;YACE8B,OAAO,EAAEA,CAAA,KAAM;cACb1B,WAAW,CAAC,IAAI,CAAC;YACnB,CAAE;YACFS,SAAS,EAAEpB,MAAM,CAACsC,SAAU;YAAAf,QAAA,EAC7B;UAED;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QACT;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CApDWF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}