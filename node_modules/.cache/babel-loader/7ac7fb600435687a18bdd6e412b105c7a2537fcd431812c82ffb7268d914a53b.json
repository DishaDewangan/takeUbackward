{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\tub quiz app\\\\ReactQuizApp\\\\src\\\\components\\\\question\\\\Question.jsx\";\nimport styles from \"./Question.module.css\";\nimport { TiTickOutline } from \"react-icons/ti\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Question = _ref => {\n  let {\n    index,\n    data,\n    selectedAnswer,\n    onAnswerSelected\n  } = _ref;\n  const {\n    correctAnswer\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.questionDiv,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.question,\n      children: [index + 1, \". \", data.question]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.options,\n      children: data.choices.map((option, idx) => {\n        const isSelected = selectedAnswer === option;\n        const isCorrect = option === correctAnswer;\n        const optionClass = isSelected ? isCorrect ? styles.correctOption : styles.incorrectOption : styles.option;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: optionClass,\n          onClick: () => onAnswerSelected(index, option) // Update the selected answer\n          ,\n          children: [option, \" \\xA0\", isCorrect && /*#__PURE__*/_jsxDEV(TiTickOutline, {\n            style: {\n              fontSize: \"20px\",\n              color: \"green\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["styles","TiTickOutline","jsxDEV","_jsxDEV","Question","_ref","index","data","selectedAnswer","onAnswerSelected","correctAnswer","className","questionDiv","children","question","fileName","_jsxFileName","lineNumber","columnNumber","options","choices","map","option","idx","isSelected","isCorrect","optionClass","correctOption","incorrectOption","onClick","style","fontSize","color","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/tub quiz app/ReactQuizApp/src/components/question/Question.jsx"],"sourcesContent":["import styles from \"./Question.module.css\";\r\nimport { TiTickOutline } from \"react-icons/ti\";\r\n\r\nexport const Question = ({ index, data, selectedAnswer, onAnswerSelected }) => {\r\n  const { correctAnswer } = data;\r\n\r\n  return (\r\n    <div key={index} className={styles.questionDiv}>\r\n      <p className={styles.question}>\r\n        {index + 1}. {data.question}\r\n      </p>\r\n      <ul className={styles.options}>\r\n        {data.choices.map((option, idx) => {\r\n          const isSelected = selectedAnswer === option;\r\n          const isCorrect = option === correctAnswer;\r\n          const optionClass = isSelected\r\n            ? isCorrect\r\n              ? styles.correctOption\r\n              : styles.incorrectOption\r\n            : styles.option;\r\n\r\n          return (\r\n            <li\r\n              key={idx}\r\n              className={optionClass}\r\n              onClick={() => onAnswerSelected(index, option)} // Update the selected answer\r\n            >\r\n              {option} &nbsp;\r\n              {isCorrect && (\r\n                <TiTickOutline\r\n                  style={{\r\n                    fontSize: \"20px\",\r\n                    color: \"green\",\r\n                  }}\r\n                />\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,uBAAuB;AAC1C,SAASC,aAAa,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,QAAQ,GAAGC,IAAA,IAAuD;EAAA,IAAtD;IAAEC,KAAK;IAAEC,IAAI;IAAEC,cAAc;IAAEC;EAAiB,CAAC,GAAAJ,IAAA;EACxE,MAAM;IAAEK;EAAc,CAAC,GAAGH,IAAI;EAE9B,oBACEJ,OAAA;IAAiBQ,SAAS,EAAEX,MAAM,CAACY,WAAY;IAAAC,QAAA,gBAC7CV,OAAA;MAAGQ,SAAS,EAAEX,MAAM,CAACc,QAAS;MAAAD,QAAA,GAC3BP,KAAK,GAAG,CAAC,EAAC,IAAE,EAACC,IAAI,CAACO,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACJf,OAAA;MAAIQ,SAAS,EAAEX,MAAM,CAACmB,OAAQ;MAAAN,QAAA,EAC3BN,IAAI,CAACa,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;QACjC,MAAMC,UAAU,GAAGhB,cAAc,KAAKc,MAAM;QAC5C,MAAMG,SAAS,GAAGH,MAAM,KAAKZ,aAAa;QAC1C,MAAMgB,WAAW,GAAGF,UAAU,GAC1BC,SAAS,GACPzB,MAAM,CAAC2B,aAAa,GACpB3B,MAAM,CAAC4B,eAAe,GACxB5B,MAAM,CAACsB,MAAM;QAEjB,oBACEnB,OAAA;UAEEQ,SAAS,EAAEe,WAAY;UACvBG,OAAO,EAAEA,CAAA,KAAMpB,gBAAgB,CAACH,KAAK,EAAEgB,MAAM,CAAE,CAAC;UAAA;UAAAT,QAAA,GAE/CS,MAAM,EAAC,OACR,EAACG,SAAS,iBACRtB,OAAA,CAACF,aAAa;YACZ6B,KAAK,EAAE;cACLC,QAAQ,EAAE,MAAM;cAChBC,KAAK,EAAE;YACT;UAAE;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACF;QAAA,GAZIK,GAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAaN,CAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA,GAhCGZ,KAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAiCV,CAAC;AAEV,CAAC;AAACe,EAAA,GAvCW7B,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}