{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\tub quiz app\\\\ReactQuizApp\\\\src\\\\screens\\\\reviewScreen\\\\ReviewScreen.jsx\";\nimport styles from \"./ReviewScreen.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport { quizData } from \"../../utils/quizData\";\nimport { InfoToolTip } from \"../../components/toolTip/InfoToolTip\";\nimport { Question } from \"../../components/question/Question\";\nimport cx from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ReviewScreen = _ref => {\n  let {\n    setIsRetake,\n    userAnswers\n  } = _ref;\n  const {\n    questions\n  } = quizData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx(appStyles.fadeInRight, styles.reviewScreenWrapper),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.reviewScreen,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.columnContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.column,\n          children: questions.slice(0, 2).map((data, index) => {\n            const userAnswer = userAnswers[index];\n            const isCorrect = userAnswer === data.correctAnswer; // Check if the user's answer is correct\n            return /*#__PURE__*/_jsxDEV(Question, {\n              index: index,\n              data: data,\n              userAnswer: userAnswer,\n              isCorrect: isCorrect // Pass whether the answer is correct\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.column,\n          children: questions.slice(2, 4).map((data, index) => {\n            const userAnswer = userAnswers[index + 2]; // Offset the index for the second column\n            const isCorrect = userAnswer === data.correctAnswer;\n            return /*#__PURE__*/_jsxDEV(Question, {\n              index: index + 2,\n              data: data,\n              userAnswer: userAnswer,\n              isCorrect: isCorrect\n            }, index + 2, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.btnDiv,\n        children: /*#__PURE__*/_jsxDEV(InfoToolTip, {\n          text: \"Click me to retake the quiz!\",\n          component: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setIsRetake(true);\n            },\n            className: styles.retakeBtn,\n            children: \"Retake Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = ReviewScreen;\nvar _c;\n$RefreshReg$(_c, \"ReviewScreen\");","map":{"version":3,"names":["styles","appStyles","quizData","InfoToolTip","Question","cx","jsxDEV","_jsxDEV","ReviewScreen","_ref","setIsRetake","userAnswers","questions","className","fadeInRight","reviewScreenWrapper","children","reviewScreen","columnContainer","column","slice","map","data","index","userAnswer","isCorrect","correctAnswer","fileName","_jsxFileName","lineNumber","columnNumber","btnDiv","text","component","onClick","retakeBtn","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/tub quiz app/ReactQuizApp/src/screens/reviewScreen/ReviewScreen.jsx"],"sourcesContent":["import styles from \"./ReviewScreen.module.css\";\r\nimport appStyles from \"../../App.module.css\";\r\nimport { quizData } from \"../../utils/quizData\";\r\nimport { InfoToolTip } from \"../../components/toolTip/InfoToolTip\";\r\nimport { Question } from \"../../components/question/Question\";\r\nimport cx from \"classnames\";\r\n\r\nexport const ReviewScreen = ({ setIsRetake, userAnswers }) => {\r\n  const { questions } = quizData;\r\n\r\n  return (\r\n    <div className={cx(appStyles.fadeInRight, styles.reviewScreenWrapper)}>\r\n      <div className={styles.reviewScreen}>\r\n        <div className={styles.columnContainer}>\r\n          <div className={styles.column}>\r\n            {questions.slice(0, 2).map((data, index) => {\r\n              const userAnswer = userAnswers[index];\r\n              const isCorrect = userAnswer === data.correctAnswer; // Check if the user's answer is correct\r\n              return (\r\n                <Question\r\n                  key={index}\r\n                  index={index}\r\n                  data={data}\r\n                  userAnswer={userAnswer}\r\n                  isCorrect={isCorrect} // Pass whether the answer is correct\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          <div className={styles.column}>\r\n            {questions.slice(2, 4).map((data, index) => {\r\n              const userAnswer = userAnswers[index + 2]; // Offset the index for the second column\r\n              const isCorrect = userAnswer === data.correctAnswer;\r\n              return (\r\n                <Question\r\n                  key={index + 2}\r\n                  index={index + 2}\r\n                  data={data}\r\n                  userAnswer={userAnswer}\r\n                  isCorrect={isCorrect}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.btnDiv}>\r\n          <InfoToolTip\r\n            text=\"Click me to retake the quiz!\"\r\n            component={\r\n              <button\r\n                onClick={() => {\r\n                  setIsRetake(true);\r\n                }}\r\n                className={styles.retakeBtn}\r\n              >\r\n                Retake Quiz\r\n              </button>\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}