{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\tub quiz app\\\\ReactQuizApp\\\\src\\\\screens\\\\reviewScreen\\\\ReviewScreen.jsx\";\nimport styles from \"./ReviewScreen.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport { quizData } from \"../../utils/quizData\";\nimport { InfoToolTip } from \"../../components/toolTip/InfoToolTip\";\nimport { Question } from \"../../components/question/Question\";\nimport cx from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ReviewScreen = _ref => {\n  let {\n    setIsRetake\n  } = _ref;\n  const {\n    questions\n  } = quizData;\n\n  // Split questions into two equal columns for responsive design\n  const splitQuestions = Math.ceil(questions.length / 2);\n  const column1 = questions.slice(0, splitQuestions);\n  const column2 = questions.slice(splitQuestions);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx(appStyles.fadeInRight, styles.reviewScreenWrapper),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.reviewScreen,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.columnContainer,\n        children: [column1, column2].map((column, columnIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.column,\n          children: column.map((data, index) => /*#__PURE__*/_jsxDEV(Question, {\n            index: index + columnIndex * splitQuestions,\n            data: data\n          }, index + columnIndex * splitQuestions, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this))\n        }, columnIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.btnDiv,\n        children: /*#__PURE__*/_jsxDEV(InfoToolTip, {\n          text: \"Click me to retake the quiz!\",\n          component: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsRetake(true),\n            className: styles.retakeBtn,\n            children: \"Retake Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = ReviewScreen;\nvar _c;\n$RefreshReg$(_c, \"ReviewScreen\");","map":{"version":3,"names":["styles","appStyles","quizData","InfoToolTip","Question","cx","jsxDEV","_jsxDEV","ReviewScreen","_ref","setIsRetake","questions","splitQuestions","Math","ceil","length","column1","slice","column2","className","fadeInRight","reviewScreenWrapper","children","reviewScreen","columnContainer","map","column","columnIndex","data","index","fileName","_jsxFileName","lineNumber","columnNumber","btnDiv","text","component","onClick","retakeBtn","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/tub quiz app/ReactQuizApp/src/screens/reviewScreen/ReviewScreen.jsx"],"sourcesContent":["import styles from \"./ReviewScreen.module.css\";\r\nimport appStyles from \"../../App.module.css\";\r\nimport { quizData } from \"../../utils/quizData\";\r\nimport { InfoToolTip } from \"../../components/toolTip/InfoToolTip\";\r\nimport { Question } from \"../../components/question/Question\";\r\nimport cx from \"classnames\";\r\n\r\nexport const ReviewScreen = ({ setIsRetake }) => {\r\n  const { questions } = quizData;\r\n\r\n  // Split questions into two equal columns for responsive design\r\n  const splitQuestions = Math.ceil(questions.length / 2);\r\n  const column1 = questions.slice(0, splitQuestions);\r\n  const column2 = questions.slice(splitQuestions);\r\n\r\n  return (\r\n    <div className={cx(appStyles.fadeInRight, styles.reviewScreenWrapper)}>\r\n      <div className={styles.reviewScreen}>\r\n        {/* Columns containing question data */}\r\n        <div className={styles.columnContainer}>\r\n          {[column1, column2].map((column, columnIndex) => (\r\n            <div key={columnIndex} className={styles.column}>\r\n              {column.map((data, index) => (\r\n                <Question\r\n                  key={index + columnIndex * splitQuestions}\r\n                  index={index + columnIndex * splitQuestions}\r\n                  data={data}\r\n                />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Retake Button */}\r\n        <div className={styles.btnDiv}>\r\n          <InfoToolTip\r\n            text=\"Click me to retake the quiz!\"\r\n            component={\r\n              <button\r\n                onClick={() => setIsRetake(true)}\r\n                className={styles.retakeBtn}\r\n              >\r\n                Retake Quiz\r\n              </button>\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,WAAW,QAAQ,sCAAsC;AAClE,SAASC,QAAQ,QAAQ,oCAAoC;AAC7D,OAAOC,EAAE,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAAqB;EAAA,IAApB;IAAEC;EAAY,CAAC,GAAAD,IAAA;EAC1C,MAAM;IAAEE;EAAU,CAAC,GAAGT,QAAQ;;EAE9B;EACA,MAAMU,cAAc,GAAGC,IAAI,CAACC,IAAI,CAACH,SAAS,CAACI,MAAM,GAAG,CAAC,CAAC;EACtD,MAAMC,OAAO,GAAGL,SAAS,CAACM,KAAK,CAAC,CAAC,EAAEL,cAAc,CAAC;EAClD,MAAMM,OAAO,GAAGP,SAAS,CAACM,KAAK,CAACL,cAAc,CAAC;EAE/C,oBACEL,OAAA;IAAKY,SAAS,EAAEd,EAAE,CAACJ,SAAS,CAACmB,WAAW,EAAEpB,MAAM,CAACqB,mBAAmB,CAAE;IAAAC,QAAA,eACpEf,OAAA;MAAKY,SAAS,EAAEnB,MAAM,CAACuB,YAAa;MAAAD,QAAA,gBAElCf,OAAA;QAAKY,SAAS,EAAEnB,MAAM,CAACwB,eAAgB;QAAAF,QAAA,EACpC,CAACN,OAAO,EAAEE,OAAO,CAAC,CAACO,GAAG,CAAC,CAACC,MAAM,EAAEC,WAAW,kBAC1CpB,OAAA;UAAuBY,SAAS,EAAEnB,MAAM,CAAC0B,MAAO;UAAAJ,QAAA,EAC7CI,MAAM,CAACD,GAAG,CAAC,CAACG,IAAI,EAAEC,KAAK,kBACtBtB,OAAA,CAACH,QAAQ;YAEPyB,KAAK,EAAEA,KAAK,GAAGF,WAAW,GAAGf,cAAe;YAC5CgB,IAAI,EAAEA;UAAK,GAFNC,KAAK,GAAGF,WAAW,GAAGf,cAAc;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAG1C,CACF;QAAC,GAPMN,WAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQhB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGN1B,OAAA;QAAKY,SAAS,EAAEnB,MAAM,CAACkC,MAAO;QAAAZ,QAAA,eAC5Bf,OAAA,CAACJ,WAAW;UACVgC,IAAI,EAAC,8BAA8B;UACnCC,SAAS,eACP7B,OAAA;YACE8B,OAAO,EAAEA,CAAA,KAAM3B,WAAW,CAAC,IAAI,CAAE;YACjCS,SAAS,EAAEnB,MAAM,CAACsC,SAAU;YAAAhB,QAAA,EAC7B;UAED;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QACT;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACM,EAAA,GA3CW/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}